# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1S35aXbVYuvNn3O-bPUjVpj7-KDzgff9X

Movie_Recommendation
"""



import pandas as pd

import numpy as np

"""Import Dataset"""

df = pd.read_csv('https://raw.githubusercontent.com/Lorddhaval/Dataset/main/Movies%20Recommendation.csv')

df.head()

df.info()

df.shape

df.columns

"""Get Feature Selection"""

df_features = df[['Movie_Genre','Movie_Keywords','Movie_Tagline','Movie_Cast','Movie_Director']].fillna('')

df_features.shape

df_features

x = df_features['Movie_Genre'] + ' ' + df_features['Movie_Keywords'] + ' ' + df_features['Movie_Tagline'] + ' ' + df_features['Movie_Cast']+ ' ' + df_features['Movie_Director']

x.shape

"""Get Features Text Conversion to Tokens"""

from sklearn.feature_extraction.text import TfidfVectorizer

tfidf = TfidfVectorizer()

x = tfidf.fit_transform(x)

x.shape

print(x)

"""Get Similarity Score Using Cosine Similarity"""

from sklearn.metrics.pairwise import cosine_similarity

Similarity_Score = cosine_similarity(x)

Similarity_Score

Similarity_Score.shape

"""Get Movie Name as Input form User & Validate for Closest Spelling"""

Favourite_Movie_Name = input(' Enter your favourite movie name :')

All_Movies_Title_List = df['Movie_Title'].tolist()

import difflib

Movie_Recommendation = difflib.get_close_matches(Favourite_Movie_Name, All_Movies_Title_List)
print(Movie_Recommendation)

Close_Match = Movie_Recommendation[0]
print(Close_Match)

Index_of_Close_Match_Movie = df[df.Movie_Title == Close_Match]['Movie_ID'].values[0]
print(Index_of_Close_Match_Movie)

Recommendation_Score = list(enumerate(Similarity_Score[Index_of_Close_Match_Movie]))
print(Recommendation_Score)

print('Top 30 Movies Suggested for You : \n')

# Assuming Sorted_Similar_Movies is a list of tuples with movie index and similarity score
# Example data for Sorted_Similar_Movies (replace with your actual data)
Sorted_Similar_Movies = [(1, 0.95), (2, 0.92), (3, 0.91), (4, 0.88), (5, 0.85), (6, 0.82), (7, 0.80), (8, 0.78), (9, 0.75), (10, 0.72)]

for movie in Sorted_Similar_Movies[:30]:  # Loop up to the minimum of 30 or the length of Sorted_Similar_Movies
    index = movie[0]
    title_from_index = df[df.index == index]['Movie_Title'].values[0]
    print(i, '.', title_from_index)
    i += 1

"""Top 10 Movie Recommendation System"""

Movie_Name = input('Enter Your Favourite Movie Name: ')

list_of_all_titles = df['Movie_Title'].tolist()

Find_Close_Match = difflib.get_close_matches(Movie_Name, list_of_all_titles)

Close_Match = Find_Close_Match[0]

Index_of_Movie = df[df.Movie_Title == Close_Match]['Movie_ID'].values[0]

Recommendation_Score = list(enumerate(Similarity_Score[Index_of_Movie]))

sorted_similar_movies = sorted(Recommendation_Score, key = lambda x:x[1], reverse = True)

print('Top 10 Movies Suggested For You : \n')

i = 1
for movie in Sorted_Similar_Movies:
  index = movie[0]
  title_from_index = df[df.Movie_ID==index]['Movie_Title'].values
  if (i<11):
    print(i, '.',title_from_index)
    i+=1